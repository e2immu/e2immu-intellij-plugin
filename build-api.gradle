/*
 * e2immu: a static code analyser for effective and eventual immutability
 * Copyright 2020-2021, Bart Naudts, https://www.e2immu.org
 *
 * This program is free software: you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
 * more details. You should have received a copy of the GNU Lesser General Public
 * License along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

plugins {
    id 'java'
    id 'org.e2immu.analyser'
}

java {
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/e2immu/e2immu-support")
    }
}

dependencies {
    implementation group: 'org.e2immu', name: 'e2immu-support', version: '0.2.0'
    implementation group: 'org.e2immu', name: 'analyser-cli', version: '0.2.0'      // LGPL 3.0

    implementation group: 'org.jetbrains', name: 'annotations', version: '19.0.0'

    // HELP! THIS IS NOT HOW I WANT TO DO THIS...
    implementation(files("/Applications/IntelliJ IDEA CE.app/Contents/lib/platform-api.jar"))
    implementation(files("/Applications/IntelliJ IDEA CE.app/Contents/lib/platform-impl.jar"))
    implementation(files("/Applications/IntelliJ IDEA CE.app/Contents/lib/http-client.jar"))
    implementation(files("/Applications/IntelliJ IDEA CE.app/Contents/plugins/java/lib/java-impl.jar"))
    implementation(files("/Applications/IntelliJ IDEA CE.app/Contents/plugins/java/lib/java-api.jar"))
    implementation(files("/Applications/IntelliJ IDEA CE.app/Contents/lib/util.jar"))
    implementation(files("/Applications/IntelliJ IDEA CE.app/Contents/lib/guava.jar"))
    implementation(files("/Applications/IntelliJ IDEA CE.app/Contents/lib/gson-2.8.6.jar"))

    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

/*
 ./gradlew -b build-api.gradle runAAPIUsage
 */
task runAAPIUsage(type: JavaExec) {
    group = "Execution"
    description = "Prepare an AnnotatedAPI file for com.intellij,org.jetbrains etc."

    classpath = sourceSets.main.runtimeClasspath
    main = 'org.e2immu.analyser.cli.Main'

    Set<File> theClassPath = new ArrayList<File>(sourceSets.main.runtimeClasspath.toList())
  //  reducedClassPath += sourceSets.test.runtimeClasspath
    theClassPath.removeIf({ f -> f.path.contains("build/classes") || f.path.contains("build/resources") })

    args('--classpath=' + theClassPath.join(":") + ":jmods/java.base.jmod:jmods/java.desktop.jmod:jmods/java.datatransfer.jmod",
            '--write-annotated-api=USAGE',
            '--write-annotated-api-destination-package=org.e2immu.intellij.highlighteraapi',
            "--write-annotated-api-packages=com.intellij.,org.jetbrains.",
            "--source=src/main/java",
            "--source-packages=org.e2immu.intellij.highlighter.",
            "-d=CONFIGURATION,BYTECODE_INSPECTOR,ANNOTATED_API_WRITER,ANALYSER,DELAYED")
}
